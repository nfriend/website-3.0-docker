worker_processes  auto;

error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
  include mime.types;
  include proxy.conf;

  access_log logs/access.log;

  gzip on;
  gzip_types text/plain application/xml text/css application/x-javascript application/javascript application/json image/svg+xml;
  gzip_proxied no-cache no-store private expired auth;
  gzip_min_length 1000;

  add_header X-Frame-Options "SAMEORIGIN";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Content-Type-Options nosniff;

  server_tokens off;

  include options-ssl-nginx.conf;
  ssl_dhparam ssl-dhparams.pem;
  ssl_certificate local.cert.pem;
  ssl_certificate_key local.key.pem;

  # HTTP server to redirect to HTTPS
  server {
    listen          80 default_server;
    server_name     _;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server to redirect .com to .io
  server {
    listen          443 ssl;
    server_name     ~^(?<subdomains>.+)?nathanfriend.com$;
    set $fulldomain "${subdomains}nathanfriend.io";

    location / {
      return 301 https://$fulldomain$request_uri;
    }
  }

  # HTTPS server to redirect .dev to .io
  server {
    listen          443 ssl;
    server_name     ~^(?<subdomains>.+)?nathanfriend.dev$;
    set $fulldomain "${subdomains}nathanfriend.io";

    location / {
      return 301 https://$fulldomain$request_uri;
    }
  }

  # HTTPS server to redirect www.* to non www.*
  server {
    listen          443 ssl;
    server_name     www.nathanfriend.io;

    location / {
      return 301 https://nathanfriend.io$request_uri;
    }
  }

  # HTTPS server to redirect bethany.and to wedding website
  server {
    listen          443 ssl;
    server_name     www.bethany.and.nathanfriend.io bethany.and.nathanfriend.io;

    location / {
      return 301 https://nathanfriend.io/wedding$request_uri;
    }
  }

  # Main HTTPS server
  server {
    listen          443 ssl;
    server_name     nathanfriend.io;

    error_page 404 /404.html;
    error_page 403 /403.html;
    error_page 500 502 503 504 /500.html;

    rewrite ^/spirograph(.*)$ https://nathanfriend.io/inspiral-web$1 permanent;
    rewrite ^/inspirograph(.*)$ https://nathanfriend.io/inspiral-web$1 permanent;

    location / {
      root    html;
      index   index.html index.php;
      try_files $uri $uri/ $uri.html =404;
    }

    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass php:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_path_info;
      include fastcgi_params.conf;
    }
  }

  # Proxy for Rook WebSocket connections
  server {
    listen          9300 ssl;
    server_name     nathanfriend.io;

    location / {
      proxy_pass              http://php:9300;
    }
  }

  # Proxy for NodeChat WebSocket connections
  server {
    listen          8089 ssl;
    server_name     nathanfriend.io;

    location / {
      proxy_pass              http://nodechat-server:8089;
    }
  }

  # Proxy websocket traffic to roggle-server
  server {
    listen          18734 ssl;
    server_name     .nathanfriend.io .nathanfriend.com .nathanfriend.dev;

    location / {
      proxy_pass http://roggle-server:18734;
    }
  }

  # HTTPS server to deny any subdomains
  # that weren't explicitly mentioned above
  server {
    listen          443 ssl;
    server_name     *.nathanfriend.io;

    return 444;
  }

}
